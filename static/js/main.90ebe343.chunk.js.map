{"version":3,"sources":["_reducers/registrationReducer.js","_reducers/authenticationReducer.js","_reducers/rootReducer.js","_reducers/alertReducer.js","_helpers/store.js","_helpers/history.js","_components/PrivateRoute.js","firebase.js","_services/userService.js","_actions/alertActions.js","_actions/userActions.js","_components/LoginPage.js","_components/RegisterPage.js","_components/MemberPage.js","App.js","index.js"],"names":["registrationReducer","state","action","typeof","registering","user","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authenticationReducer","type","alertReducer","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","history","createHashHistory","PrivateRoute","RouteComponent","component","rest","console","log","render","routeProps","to","firebaseAuth","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","userService","register","email","password","auth","createUserWithEmailAndPassword","then","param","catch","error","Promise","reject","login","signInWithEmailAndPassword","setItem","logout","signOut","removeItem","alertActions","success","clear","userActions","dispatch","request","push","test","failure","LoginPage","props","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","submitted","this","alert","className","onSubmit","onChange","placeholder","Component","actionCreators","connectedLoginPage","connect","RegisterPage","connectedRegisterPage","MemberPage","App","listen","location","clearAlerts","exact","path","connectedApp","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.90ebe343.chunk.js","sourcesContent":["\r\n\r\nconst registrationReducer = (state = {}, action) => {\r\n\r\n    switch (action.typeof){\r\n        case \"REGISTER_REQUEST\":\r\n            return {\r\n                registering: true\r\n            };\r\n        case \"REGISTER_SUCCESS\":\r\n            return {};\r\n        case \"REGISTER_FAILURE\":\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default registrationReducer;\r\n\r\n","\r\nlet user = localStorage.getItem('email');\r\nconst initialState = user ? {loggedIn: true, user} : {};\r\n\r\nexport const authenticationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case \"LOGIN_SUCCESS\":\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case \"LOGIN_FAILURE\":\r\n            return {};\r\n        case \"LOGOUT\":\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from 'redux'\r\n//import { authentication  } from './authenticationReducer'\r\nimport registrationReducer from './registrationReducer'\r\nimport {authenticationReducer} from './authenticationReducer'\r\nimport { alertReducer } from './alertReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    registrationReducer,\r\n    authenticationReducer,\r\n    alertReducer\r\n});\r\n\r\nexport default rootReducer","\r\nexport const alertReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case \"ALERT_SUCCESS\":\r\n            return {\r\n                type: \"alert-success\",\r\n                message: action.message\r\n            };\r\n        case \"ALERT_ERROR\":\r\n            return {\r\n                type: \"alert-danger\",\r\n                message: action.message\r\n            };\r\n        case \"ALERT_CLEAR\":\r\n            return{};\r\n        default:\r\n            return state\r\n    }\r\n};","import { createStore, applyMiddleware }from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {createLogger} from 'redux-logger'\r\nimport rootReducer from '../_reducers/rootReducer'\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware, loggerMiddleware\r\n    )\r\n);","import {createBrowserHistory, createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory();","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n\r\n    console.log(localStorage.getItem('email'));\r\n    return (\r\n        <Route\r\n            { ...rest }\r\n            render = { routeProps =>\r\n                localStorage.getItem('email') ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import * as firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n// Initialize Firebase\r\nconst firebaseAuth = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseAuth\r\n","import firebaseAuth from '../firebase'\r\n\r\n    export const userService = {\r\n        register,\r\n        login,\r\n        logout\r\n    };\r\n\r\n    function register(user) {\r\n\r\n            console.log(user.email);\r\n            console.log(user.password);\r\n        return firebaseAuth.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n            .then(param => {\r\n                console.log(param);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                return Promise.reject(error)\r\n            })\r\n    }\r\n\r\n    function login(email, password){\r\n        return firebaseAuth.auth().signInWithEmailAndPassword(email, password)\r\n            .then((user)=>{\r\n                localStorage.setItem('email', user.user.email);\r\n                return user\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n                return Promise.reject(error)\r\n            })\r\n    }\r\n\r\n    function logout() {\r\n        firebaseAuth.auth().signOut()\r\n            .then(() => {\r\n                console.log('Signed out');\r\n            });\r\n        localStorage.removeItem('email');\r\n    }\r\n","\r\n\r\nconst success  = ( message ) => {\r\n    return{\r\n        type: \"ALERT_SUCCESS\",\r\n        message\r\n    }\r\n};\r\n\r\nconst error = ( message ) => {\r\n    return{\r\n        type: \"ALERT_ERROR\",\r\n        message\r\n    }\r\n};\r\n\r\nconst clear = () => {\r\n    return{\r\n        type: \"ALERT_CLEAR\"\r\n    }\r\n};\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n};","import { userService } from '../_services/userService'\r\nimport { history } from '../_helpers/history'\r\nimport { alertActions } from './alertActions'\r\n\r\n    export const userActions = {\r\n        register,\r\n        login,\r\n        logout\r\n    };\r\n\r\n    function register(user){\r\n\r\n        return dispatch => {\r\n            dispatch(request(user));\r\n\r\n            userService.register(user)\r\n                .then(\r\n                    (user) => {\r\n                        dispatch(success());\r\n                        history.push('/login')\r\n                        dispatch(alertActions.success('Registration successful'))\r\n                    },\r\n                    error => {\r\n                        console.log(error.message);\r\n                        dispatch(alertActions.error(error.message))\r\n                    }\r\n                )\r\n        };\r\n\r\n        function request(user){\r\n            return {\r\n                type: \"REGISTER_REQUEST\",\r\n                user\r\n            }\r\n        }\r\n\r\n        function success(user){\r\n            return {\r\n                type: \"REGISTER_SUCCESS\",\r\n                user\r\n            }\r\n        }\r\n    }\r\n\r\n    function login(email, password) {\r\n\r\n        return dispatch => {\r\n            //dispatch(request({ email }))\r\n            const test = userService.login( email, password )\r\n                .then(\r\n                    user => {\r\n                        console.log(user)\r\n                        dispatch( success(user) );\r\n                        history.push('/')\r\n                    },\r\n                    error => {\r\n                        dispatch(failure(error.message));\r\n                        dispatch(alertActions.error(error.message));\r\n                    }\r\n                );\r\n\r\n            console.log(test)\r\n        };\r\n\r\n        function request(user){\r\n            console.log(user);\r\n            return {\r\n                type: \"LOGIN_REQUEST\",\r\n                user\r\n            }\r\n        }\r\n\r\n        function success(user){\r\n            return {\r\n                type: \"LOGIN_SUCCESS\",\r\n                user\r\n            }\r\n        }\r\n\r\n        function failure(error){\r\n            return {\r\n                type: \"LOGIN_FAILURE\",\r\n                error\r\n            }\r\n        }\r\n    }\r\n\r\n    function logout() {\r\n        userService.logout();\r\n        return { type: \"LOGOUT\"}\r\n    }\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n//import { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//import firebaseAuth from '../firebase'\r\nimport { userActions } from '../_actions/userActions'\r\n\r\nclass LoginPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            submitted: false\r\n        };\r\n\r\n        this.props.logout()\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            submitted: true\r\n        });\r\n\r\n        const{ email, password } = this.state\r\n        if(email && password){\r\n            this.props.login(email, password)\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const{ email, password, submitted } = this.state;\r\n        const { alert } = this.props;\r\n        console.log(this.props)\r\n        return (\r\n            <div className=\"shadow col-sm-6 col-lg-4 border p-5\">\r\n                { alert.message && <div className={`alert ${ alert.type }`}>{ alert.message }</div>}\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"d-block mb-3\">\r\n                        Email\r\n                        <input type=\"email\" onChange={this.handleChange} value={ email }\r\n                               name=\"email\" className={\"form-control\" + (submitted && !email ? \" is-invalid\": \"\")} placeholder=\"Enter email\"/>\r\n                        { submitted && !email &&\r\n                        <div className=\"invalid-feedback\">Email is required</div> }\r\n                    </label>\r\n\r\n\r\n                    <label className=\"d-block mb-3\">\r\n                        Password\r\n                        <input type=\"password\" onChange={this.handleChange} value={ password }\r\n                               name=\"password\" className={\"form-control\" + (submitted && !password ? \" is-invalid\": \"\")} placeholder=\"Password\"/>\r\n                        { submitted && !password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div> }\r\n                    </label>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                    <Link to=\"/register\" className=\"btn text-primary\">Register</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const alert = state.alertReducer;\r\n    const { loggedIn } = state.authenticationReducer;\r\n    return { alert, loggedIn }\r\n};\r\n\r\n//mapDispatchToProps\r\nconst actionCreators = {\r\n    login: userActions.login,\r\n    logout: userActions.logout\r\n};\r\n\r\nconst connectedLoginPage = connect(mapStateToProps, actionCreators)(LoginPage);\r\n\r\nexport {connectedLoginPage as LoginPage};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { userActions } from'../_actions/userActions'\r\nimport registrationReducer from \"../_reducers/registrationReducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RegisterPage extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            user:{\r\n                email:'',\r\n                password: ''\r\n            },\r\n            submitted: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        const { user } = this.state;\r\n\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                [name] : value\r\n            }\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { user } = this.state;\r\n\r\n        if( user.email && user.password ){\r\n            this.props.register(user);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        const{ user, submitted} = this.state;\r\n        const { alert } = this.props;\r\n        return (\r\n            <div className=\"shadow col-sm-6 col-lg-4 border p-5\">\r\n                { alert.message && <div className={`alert ${ alert.type }`}>{ alert.message }</div>}\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className=\"d-block mb-3\">\r\n                        Email\r\n                        <input type=\"email\" onChange={this.handleChange} value={user.email}\r\n                               name=\"email\" className={\"form-control\" + (submitted && !user.email ? \" is-invalid\": \"\")} placeholder=\"Email\" />\r\n                        { submitted && !user.email &&\r\n                        <div>Email is required</div> }\r\n                    </label>\r\n                    <label className=\"d-block mb-3\">\r\n                        Password\r\n                        <input type=\"password\" onChange={this.handleChange} value={user.password}\r\n                               name=\"password\" className={\"form-control\" + (submitted && !user.password ? \" is-invalid\": \"\")} placeholder=\"Password\" />\r\n                        { submitted && !user.password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div>}\r\n                    </label>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                    <Link to=\"/login\" className=\"btn text-primary\">Cancel</Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const alert = state.alertReducer;\r\n    const{ registering } = state.registrationReducer\r\n    return { alert, registering }\r\n};\r\n\r\n//MapDispatchToProps\r\nconst actionCreators = {\r\n    register: userActions.register\r\n};\r\n\r\nconst connectedRegisterPage = connect(mapStateToProps, actionCreators)\r\n(RegisterPage);\r\n\r\nexport {connectedRegisterPage as RegisterPage};","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction MemberPage() {\r\n    return (\r\n        <>\r\n            <Link className=\" btn btn-primary btn-logout\" to=\"/login\">Logout</Link>\r\n            <h1>Welcome to Member page</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MemberPage;","import React, {Component} from 'react';\r\nimport { Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { history } from './_helpers/history'\r\n\r\nimport PrivateRoute from './_components/PrivateRoute'\r\nimport { LoginPage } from './_components/LoginPage'\r\nimport { RegisterPage } from './_components/RegisterPage'\r\nimport MemberPage from './_components/MemberPage'\r\nimport { alertActions } from './_actions/alertActions'\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        history.listen((location, action) => {\r\n\r\n            //clear alert on location changes\r\n            this.props.clearAlerts()\r\n        });\r\n    }\r\n    render() {\r\n        // const { alertReducer } = this.props;\r\n        console.log(this.props);\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center h-100 position-relative\">\r\n                {/*{ alertReducer.message && <div className={`alert ${ alertReducer.type }`}>{ alertReducer.message }</div>}*/}\r\n                <Router history={history}>\r\n                    <Switch>\r\n                        <PrivateRoute exact path=\"/\" component={ MemberPage }/>\r\n                        <Route path=\"/login\" component={ LoginPage }/>\r\n                        <Route path=\"/register\" component={ RegisterPage }/>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    const { alertReducer } = state;\r\n    return { alertReducer }\r\n};\r\n\r\n\r\n//mapDispatchToProps\r\nconst actionCreators = {\r\n    clearAlerts: alertActions.clear\r\n};\r\n\r\nconst connectedApp = connect(mapStateToProps, actionCreators)(App)\r\n\r\nexport { connectedApp as App };\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './App.scss'\r\n\r\nimport { store } from './_helpers/store'\r\nimport { App } from './App'\r\n\r\n\r\nReactDOM.render(<Provider store={ store }>\r\n                    <App />\r\n                </Provider>,\r\n                document.querySelector('#root'));"],"sourceRoot":""}